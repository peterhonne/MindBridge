server:
  port: 8081
  servlet:
    context-path: /agent

spring:
  application:
    name: agent-orchestrator-service
  datasource:
    url: ${POSTGRE_URL}
    username: ${POSTGRE_USERNAME}
    password: ${POSTGRE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
  ai:
    vertex:
      ai:
        gemini:
          project-id: ${GEMINI_PROJECT_ID}
          location: ${GEMINI_LOCATION}
          chat:
            options:
              model: ${GEMINI_MODEL}
        embedding:
          project-id: ${GEMINI_PROJECT_ID}
          location: ${GEMINI_LOCATION}
    vectorstore:
      pgvector:
        table-name: mindbridge_vector
        initialize-schema: true

logging:
  level:
    root: INFO


management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
    prometheus:
      access: read_only
  prometheus:
    metrics:
      export:
        enabled: true